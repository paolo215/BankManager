//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankManager_Csharp.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class Account
    {

        
        public int accountId { get; set; }
        public string username { get; set; }
        public string password { get; set; }
        public string firstName { get; set; }
        public string lastName { get; set; }
        public string address { get; set; }
        public double balance { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Transaction> Transactions { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Account()
        {
            this.Transactions = new List<Transaction>();
        }

        /// <summary>
        /// Instantiates Account object. This represents a bank account
        /// for the user.
        /// </summary>
        /// <param name="username"></param>
        /// <param name="password"></param>
        /// <param name="firstName"></param>
        /// <param name="lastName"></param>
        /// <param name="address"></param>
        public Account(String username, String password,
            String firstName, String lastName, String address)
        {
            this.username = username;
            this.password = password;
            this.firstName = firstName;
            this.lastName = lastName;
            this.address = address;
            this.balance = 0;
            this.Transactions = new List<Transaction>();
        }


        /// <summary>
        /// Withdraws money from this account
        /// </summary>
        /// <param name="amount"></param>
        /// <returns></returns>
        public double withdraw(double amount)
        {
            balance -= amount;
            return balance;
        }

        /// <summary>
        /// Deposits money from this account
        /// </summary>
        /// <param name="amount"></param>
        /// <returns></returns>
        public double deposit(double amount)
        {
            balance += amount;
            return balance;
        }

    }
}
